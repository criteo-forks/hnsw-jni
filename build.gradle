plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '2.0.1'
    id 'maven-publish'
}

mainClassName = 'com.criteo.hnsw.HelloHnsw'
group = "com.criteo.hnsw"

repositories {
   jcenter()
}

configurations {
    javacpp
}

dependencies {
    javacpp group: 'org.bytedeco', name: 'javacpp', version: '1.4.4'
    compile configurations.javacpp.dependencies
    testCompile 'junit:junit:4.12'

}

def HnswLibConfigClass= "HnswLibConfig"
def HnswLibClass= "HnswLib"

task compileConfig(type: JavaCompile) {
    source = fileTree(dir: 'src', include: "**/${HnswLibConfigClass}.java")
    destinationDir = file(sourceSets.main.java.outputDir)
    classpath = files([configurations.javacpp.asPath])
}

task copyCpp(type: Copy) {
    from "src/main/cpp/"
    include "**"
    into file("${sourceSets.main.java.outputDir}/com/criteo/hnsw/")
}

task generateJniClass(type: JavaExec, dependsOn: ['compileConfig', 'copyCpp']) {
    classpath = files([configurations.javacpp.asPath])
    main = 'org.bytedeco.javacpp.tools.Builder'
    args = [
        '-classpath', sourceSets.main.java.outputDir,
        '-d', 'src/main/java/',
        "com.criteo.hnsw.${HnswLibConfigClass}"
    ]
}

task compileLib(type: JavaCompile, dependsOn: 'generateJniClass') {
    source = fileTree(dir: 'src', include: ["**/${HnswLibClass}.java", "**/${HnswLibConfigClass}.java"])
    destinationDir = file(sourceSets.main.java.outputDir)
    classpath = files([configurations.javacpp.asPath])
}

task generateLibrary(type: JavaExec, dependsOn: 'compileLib') {
    classpath = files([configurations.javacpp.asPath])
    main = 'org.bytedeco.javacpp.tools.Builder'
    args = [
        '-classpath', sourceSets.main.java.outputDir,
        '-nodelete',
        "com.criteo.hnsw.${HnswLibClass}"
    ]
}
compileJava.dependsOn generateLibrary
compileTestJava.dependsOn generateLibrary
//SET( CMAKE_CXX_FLAGS  "-Ofast -DNDEBUG -std=c++11 -DHAVE_CXX0X -openmp -march=native -fpic -w -fopenmp -ftree-vectorize" )
//clang++ -I/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/include -I/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/include/darwin /Users/d.parfenchik/Dev/hnswlib-jni/build/classes/java/main/com/criteo/hnsw/jniHnswLib.cpp /Users/d.parfenchik/Dev/hnswlib-jni/build/classes/java/main/jnijavacpp.cpp -std=c++11 -march=x86-64 -m64 -O3 -Wl,-rpath,@loader_path/. -Wall -fPIC -dynamiclib -undefined dynamic_lookup -o libjniHnswLib.dylib -framework JavaVM

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}
