import org.apache.tools.ant.taskdefs.condition.Os
plugins {
    id "me.champeau.gradle.jmh" version "0.5.0"
}

description = "Hnswlib JNI bindings"

apply plugin: 'java-library'
apply plugin: 'com.criteo.moab-module'
apply plugin: 'com.criteo.shadowed-library'

apply from: parentPomsFile('java-parent/parent.gradle')

ext {
    artifactId = "hnswlib-jni"
    groupId = "com.criteo.hnsw"
    platform = Os.isFamily(Os.FAMILY_WINDOWS) ? "windows" : "unix"
    cmakeWorkdir = file("$buildDir/cmake_$platform")
    nativeOutput =  file("$buildDir/jniLibs")
    netty_buffer_version="4.1.34.Final"
}


libraries {
    library "org.apache.commons:commons-lang3:3.8.1"
    library "io.netty:netty-buffer:${netty_buffer_version}"
}

moabDependencies {
    compile ':enterprise:knn-interface:knninterface'
}

task cmake(type: CrossPlatformExec) {
    inputs.file('CMakeLists.txt')
    inputs.file("cmake-unix.sh")
    inputs.files('src/main/cpp')
    inputs.files('src/main/includes')
    inputs.files('src/test/cpp')
    outputs.dir(nativeOutput)
    doFirst {
        cmakeWorkdir.mkdirs()
    }
    executable "$projectDir/cmake-${platform}"
    args "$projectDir", "-DCMAKE_BUILD_TYPE=Release"
    environment 'CMAKE_LIBRARY_OUTPUT_DIRECTORY', "$nativeOutput/native"
    environment 'CMAKE_RUNTIME_OUTPUT_DIRECTORY', "$nativeOutput/native"
    workingDir cmakeWorkdir
}

task cmakeTest(type: CrossPlatformExec) {
    dependsOn cmake
    environment 'CTEST_OUTPUT_ON_FAILURE', "1"
    executable 'make'
    args "test"
    workingDir cmakeWorkdir
}

test.finalizedBy cmakeTest

// This task will generate com_criteo_recommendation_knn_HnswLib.h
task generateJniHeaders(type:Exec) {
    dependsOn classes
    def jniClass = "com.criteo.hnsw.HnswLib"
    def outputPath = "src/main/cpp/com_criteo_hnsw_HnswLib.h"
    executable "javah"
    args "-o", outputPath, "-classpath", sourceSets.main.output.classesDirs.asPath, jniClass
}

sourceSets {
    main {
        output.dir(nativeOutput, builtBy: cmake)
    }
}

dependencies {
    api libraries["org.apache.commons:commons-lang3"]
    api libraries["io.netty:netty-buffer"]
    testImplementation libraries["junit:junit"]
    jmh 'org.openjdk.jmh:jmh-core:0.9'
    jmh 'org.openjdk.jmh:jmh-generator-annprocess:0.9'
    implementation 'com.google.code.gson:gson:2.8.6'
}

shadowJar {
    zip64 true
    // There is collision with spark 2.2 netty version
    relocate("io.netty.buffer", "hnsw.io.netty.buffer")
    relocate("io.netty.util", "hnsw.io.netty.util")
}

jmhRunBytecodeGenerator {
    // Disable caching for this task
    outputs.cacheIf { false }
}

jmh {
    fork = 1
    iterations = 5
    humanOutputFile = project.file("${project.buildDir}/artifacts/human.txt")
    resultsFile = project.file("${project.buildDir}/artifacts/results.txt")
    forceGC = true
    profilers = []
    jvmArgsAppend = ["-server"]
    failOnError = true
}